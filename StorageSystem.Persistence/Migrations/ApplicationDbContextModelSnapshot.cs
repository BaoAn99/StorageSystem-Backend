// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StorageSystem.Persistence;

#nullable disable

namespace StorageSystem.Persistence.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.24")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("Roles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("RoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("UserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("UserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("UserTokens", (string)null);
                });

            modelBuilder.Entity("StorageSystem.Domain.Entities.Bill", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("DateCreated")
                        .HasColumnType("datetimeoffset");

                    b.Property<decimal?>("Deposit")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("OwnerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(18,4)");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("Bills");
                });

            modelBuilder.Entity("StorageSystem.Domain.Entities.BillDetail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BillId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal?>("DiscountAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,4)");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BillId");

                    b.HasIndex("ProductId");

                    b.ToTable("BillDetails");
                });

            modelBuilder.Entity("StorageSystem.Domain.Entities.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("DateCreated")
                        .HasColumnType("datetimeoffset");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = new Guid("9be53c65-521f-417a-b7de-13af7b0bdfc4"),
                            DateCreated = new DateTimeOffset(new DateTime(2024, 1, 17, 22, 15, 20, 46, DateTimeKind.Unspecified).AddTicks(3932), new TimeSpan(0, 7, 0, 0, 0)),
                            IsDeleted = false,
                            Name = "Vật liệu xây dựng"
                        });
                });

            modelBuilder.Entity("StorageSystem.Domain.Entities.Coupon", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("AmountPaid")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTimeOffset>("DateCreated")
                        .HasColumnType("datetimeoffset");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("OwnerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SupplierId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(18,4)");

                    b.HasKey("Id");

                    b.HasIndex("SupplierId");

                    b.ToTable("Coupons");
                });

            modelBuilder.Entity("StorageSystem.Domain.Entities.CouponDetail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CouponId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,4)");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CouponId");

                    b.HasIndex("ProductId");

                    b.ToTable("CouponDetails");
                });

            modelBuilder.Entity("StorageSystem.Domain.Entities.Customer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("DateCreated")
                        .HasColumnType("datetimeoffset");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("OrderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("StorageSystem.Domain.Entities.Order", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CustomerId1")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("DateCreated")
                        .HasColumnType("datetimeoffset");

                    b.Property<decimal?>("DiscountAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("OwnerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,4)");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("StatusOrder")
                        .HasColumnType("int");

                    b.Property<Guid>("UnitId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId1");

                    b.HasIndex("ProductId");

                    b.HasIndex("UnitId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("StorageSystem.Domain.Entities.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("DateCreated")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("OriginalPrice")
                        .HasColumnType("decimal(18,4)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,4)");

                    b.Property<string>("ThumbnailImage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = new Guid("484c3f38-bfe0-42b9-8e9c-f30f1aa86fd3"),
                            CategoryId = new Guid("9be53c65-521f-417a-b7de-13af7b0bdfc4"),
                            DateCreated = new DateTimeOffset(new DateTime(2024, 1, 17, 22, 15, 20, 46, DateTimeKind.Unspecified).AddTicks(4108), new TimeSpan(0, 7, 0, 0, 0)),
                            Description = "Description",
                            IsDeleted = false,
                            Name = "Tony Reichert",
                            OriginalPrice = 110000m,
                            Price = 405000m,
                            ThumbnailImage = "https://placewaifu.com/image/80"
                        },
                        new
                        {
                            Id = new Guid("3238c0b8-d4a3-4cfb-9167-695ef4224b6b"),
                            CategoryId = new Guid("9be53c65-521f-417a-b7de-13af7b0bdfc4"),
                            DateCreated = new DateTimeOffset(new DateTime(2024, 1, 17, 22, 15, 20, 46, DateTimeKind.Unspecified).AddTicks(4114), new TimeSpan(0, 7, 0, 0, 0)),
                            Description = "Description",
                            IsDeleted = false,
                            Name = "Zoey Lang",
                            OriginalPrice = 110000m,
                            Price = 405000m,
                            ThumbnailImage = "https://placewaifu.com/image/81"
                        },
                        new
                        {
                            Id = new Guid("0de34a77-a035-4eac-8f1b-5f21ebef4569"),
                            CategoryId = new Guid("9be53c65-521f-417a-b7de-13af7b0bdfc4"),
                            DateCreated = new DateTimeOffset(new DateTime(2024, 1, 17, 22, 15, 20, 46, DateTimeKind.Unspecified).AddTicks(4118), new TimeSpan(0, 7, 0, 0, 0)),
                            Description = "Description",
                            IsDeleted = false,
                            Name = "Jane Fisher",
                            OriginalPrice = 110000m,
                            Price = 405000m,
                            ThumbnailImage = "https://placewaifu.com/image/82"
                        },
                        new
                        {
                            Id = new Guid("163bd018-c22a-49e5-adb0-2ca2942bc420"),
                            CategoryId = new Guid("9be53c65-521f-417a-b7de-13af7b0bdfc4"),
                            DateCreated = new DateTimeOffset(new DateTime(2024, 1, 17, 22, 15, 20, 46, DateTimeKind.Unspecified).AddTicks(4137), new TimeSpan(0, 7, 0, 0, 0)),
                            Description = "Description",
                            IsDeleted = false,
                            Name = "William Howard",
                            OriginalPrice = 110000m,
                            Price = 405000m,
                            ThumbnailImage = "https://placewaifu.com/image/83"
                        },
                        new
                        {
                            Id = new Guid("1a1f7026-eb10-4632-ba16-c12bbea207b7"),
                            CategoryId = new Guid("9be53c65-521f-417a-b7de-13af7b0bdfc4"),
                            DateCreated = new DateTimeOffset(new DateTime(2024, 1, 17, 22, 15, 20, 46, DateTimeKind.Unspecified).AddTicks(4140), new TimeSpan(0, 7, 0, 0, 0)),
                            Description = "Description",
                            IsDeleted = false,
                            Name = "Kristen Copper",
                            OriginalPrice = 110000m,
                            Price = 405000m,
                            ThumbnailImage = "https://placewaifu.com/image/84"
                        },
                        new
                        {
                            Id = new Guid("c861791b-bce9-47a9-84c7-1abdb578d88b"),
                            CategoryId = new Guid("9be53c65-521f-417a-b7de-13af7b0bdfc4"),
                            DateCreated = new DateTimeOffset(new DateTime(2024, 1, 17, 22, 15, 20, 46, DateTimeKind.Unspecified).AddTicks(4144), new TimeSpan(0, 7, 0, 0, 0)),
                            Description = "Description",
                            IsDeleted = false,
                            Name = "Brian Kim",
                            OriginalPrice = 110000m,
                            Price = 405000m,
                            ThumbnailImage = "https://placewaifu.com/image/85"
                        },
                        new
                        {
                            Id = new Guid("d0d58f20-abe1-4f54-8e44-50e1d226ead4"),
                            CategoryId = new Guid("9be53c65-521f-417a-b7de-13af7b0bdfc4"),
                            DateCreated = new DateTimeOffset(new DateTime(2024, 1, 17, 22, 15, 20, 46, DateTimeKind.Unspecified).AddTicks(4147), new TimeSpan(0, 7, 0, 0, 0)),
                            Description = "Description",
                            IsDeleted = false,
                            Name = "Michael Hunt",
                            OriginalPrice = 110000m,
                            Price = 405000m,
                            ThumbnailImage = "https://placewaifu.com/image/86"
                        },
                        new
                        {
                            Id = new Guid("dcbeea7e-4675-4a01-b59a-a9e1f3e5f4b4"),
                            CategoryId = new Guid("9be53c65-521f-417a-b7de-13af7b0bdfc4"),
                            DateCreated = new DateTimeOffset(new DateTime(2024, 1, 17, 22, 15, 20, 46, DateTimeKind.Unspecified).AddTicks(4150), new TimeSpan(0, 7, 0, 0, 0)),
                            Description = "Description",
                            IsDeleted = false,
                            Name = "Samantha Brooks",
                            OriginalPrice = 110000m,
                            Price = 405000m,
                            ThumbnailImage = "https://placewaifu.com/image/87"
                        },
                        new
                        {
                            Id = new Guid("97aac145-947d-4da4-8191-a2a3faa81fce"),
                            CategoryId = new Guid("9be53c65-521f-417a-b7de-13af7b0bdfc4"),
                            DateCreated = new DateTimeOffset(new DateTime(2024, 1, 17, 22, 15, 20, 46, DateTimeKind.Unspecified).AddTicks(4154), new TimeSpan(0, 7, 0, 0, 0)),
                            Description = "Description",
                            IsDeleted = false,
                            Name = "Frank Harrison",
                            OriginalPrice = 110000m,
                            Price = 405000m,
                            ThumbnailImage = "https://placewaifu.com/image/88"
                        },
                        new
                        {
                            Id = new Guid("0a5b4248-5d36-45aa-89fc-dd913824d34e"),
                            CategoryId = new Guid("9be53c65-521f-417a-b7de-13af7b0bdfc4"),
                            DateCreated = new DateTimeOffset(new DateTime(2024, 1, 17, 22, 15, 20, 46, DateTimeKind.Unspecified).AddTicks(4157), new TimeSpan(0, 7, 0, 0, 0)),
                            Description = "Description",
                            IsDeleted = false,
                            Name = "Emma Adams",
                            OriginalPrice = 110000m,
                            Price = 405000m,
                            ThumbnailImage = "https://placewaifu.com/image/89"
                        },
                        new
                        {
                            Id = new Guid("da3156b8-3324-4684-8789-9af51316865b"),
                            CategoryId = new Guid("9be53c65-521f-417a-b7de-13af7b0bdfc4"),
                            DateCreated = new DateTimeOffset(new DateTime(2024, 1, 17, 22, 15, 20, 46, DateTimeKind.Unspecified).AddTicks(4160), new TimeSpan(0, 7, 0, 0, 0)),
                            Description = "Description",
                            IsDeleted = false,
                            Name = "Brandon Stevens",
                            OriginalPrice = 110000m,
                            Price = 405000m,
                            ThumbnailImage = "https://placewaifu.com/image/90"
                        },
                        new
                        {
                            Id = new Guid("19400bf1-1da8-4a52-a515-4c36577bc98b"),
                            CategoryId = new Guid("9be53c65-521f-417a-b7de-13af7b0bdfc4"),
                            DateCreated = new DateTimeOffset(new DateTime(2024, 1, 17, 22, 15, 20, 46, DateTimeKind.Unspecified).AddTicks(4166), new TimeSpan(0, 7, 0, 0, 0)),
                            Description = "Description",
                            IsDeleted = false,
                            Name = "Megan Richards",
                            OriginalPrice = 110000m,
                            Price = 405000m,
                            ThumbnailImage = "https://placewaifu.com/image/91"
                        },
                        new
                        {
                            Id = new Guid("5d01611b-e2ad-4abd-b40e-0450f50d2ec9"),
                            CategoryId = new Guid("9be53c65-521f-417a-b7de-13af7b0bdfc4"),
                            DateCreated = new DateTimeOffset(new DateTime(2024, 1, 17, 22, 15, 20, 46, DateTimeKind.Unspecified).AddTicks(4169), new TimeSpan(0, 7, 0, 0, 0)),
                            Description = "Description",
                            IsDeleted = false,
                            Name = "Oliver Scott",
                            OriginalPrice = 110000m,
                            Price = 405000m,
                            ThumbnailImage = "https://placewaifu.com/image/92"
                        },
                        new
                        {
                            Id = new Guid("cff0eb9e-3b50-4ade-9f56-cb0e4ab4d617"),
                            CategoryId = new Guid("9be53c65-521f-417a-b7de-13af7b0bdfc4"),
                            DateCreated = new DateTimeOffset(new DateTime(2024, 1, 17, 22, 15, 20, 46, DateTimeKind.Unspecified).AddTicks(4173), new TimeSpan(0, 7, 0, 0, 0)),
                            Description = "Description",
                            IsDeleted = false,
                            Name = "Grace Allen",
                            OriginalPrice = 110000m,
                            Price = 405000m,
                            ThumbnailImage = "https://placewaifu.com/image/93"
                        },
                        new
                        {
                            Id = new Guid("9089f19c-473d-40b1-b7b3-e0f5f6c8f8df"),
                            CategoryId = new Guid("9be53c65-521f-417a-b7de-13af7b0bdfc4"),
                            DateCreated = new DateTimeOffset(new DateTime(2024, 1, 17, 22, 15, 20, 46, DateTimeKind.Unspecified).AddTicks(4225), new TimeSpan(0, 7, 0, 0, 0)),
                            Description = "Description",
                            IsDeleted = false,
                            Name = "Noah Carter",
                            OriginalPrice = 110000m,
                            Price = 405000m,
                            ThumbnailImage = "https://placewaifu.com/image/94"
                        },
                        new
                        {
                            Id = new Guid("f9ac3e9c-da9e-4aba-8a12-291a3655864b"),
                            CategoryId = new Guid("9be53c65-521f-417a-b7de-13af7b0bdfc4"),
                            DateCreated = new DateTimeOffset(new DateTime(2024, 1, 17, 22, 15, 20, 46, DateTimeKind.Unspecified).AddTicks(4229), new TimeSpan(0, 7, 0, 0, 0)),
                            Description = "Description",
                            IsDeleted = false,
                            Name = "Ava Perez",
                            OriginalPrice = 110000m,
                            Price = 405000m,
                            ThumbnailImage = "https://placewaifu.com/image/95"
                        });
                });

            modelBuilder.Entity("StorageSystem.Domain.Entities.ProductImage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Caption")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("IsImageFeature")
                        .HasColumnType("bit");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductImages");

                    b.HasData(
                        new
                        {
                            Id = new Guid("dbdcb7dd-1fd3-457c-85e1-eeb5b7c7b4d2"),
                            Caption = "Caption",
                            ImagePath = "https://placewaifu.com/image/80",
                            IsImageFeature = true,
                            ProductId = new Guid("484c3f38-bfe0-42b9-8e9c-f30f1aa86fd3")
                        },
                        new
                        {
                            Id = new Guid("1f1243ad-4913-49d4-b4d9-0a1b5f676a92"),
                            Caption = "Caption",
                            ImagePath = "https://placewaifu.com/image/91",
                            IsImageFeature = false,
                            ProductId = new Guid("484c3f38-bfe0-42b9-8e9c-f30f1aa86fd3")
                        },
                        new
                        {
                            Id = new Guid("243c8ae6-9375-4f32-a1e4-5d7a9092a2e9"),
                            Caption = "Caption",
                            ImagePath = "https://placewaifu.com/image/92",
                            IsImageFeature = false,
                            ProductId = new Guid("484c3f38-bfe0-42b9-8e9c-f30f1aa86fd3")
                        },
                        new
                        {
                            Id = new Guid("c01647a5-f396-4913-98b0-37eb7da084b9"),
                            Caption = "Caption",
                            ImagePath = "https://placewaifu.com/image/93",
                            IsImageFeature = false,
                            ProductId = new Guid("484c3f38-bfe0-42b9-8e9c-f30f1aa86fd3")
                        },
                        new
                        {
                            Id = new Guid("579fd32c-4b0f-4db8-ada4-0cd008903af3"),
                            Caption = "Caption",
                            ImagePath = "https://placewaifu.com/image/81",
                            IsImageFeature = true,
                            ProductId = new Guid("3238c0b8-d4a3-4cfb-9167-695ef4224b6b")
                        },
                        new
                        {
                            Id = new Guid("dd5b3cb8-ac46-4acc-a86e-9d3dc80155e7"),
                            Caption = "Caption",
                            ImagePath = "https://placewaifu.com/image/91",
                            IsImageFeature = false,
                            ProductId = new Guid("3238c0b8-d4a3-4cfb-9167-695ef4224b6b")
                        },
                        new
                        {
                            Id = new Guid("1426016b-4f4c-4ff7-8a23-3c3a5bc19067"),
                            Caption = "Caption",
                            ImagePath = "https://placewaifu.com/image/92",
                            IsImageFeature = false,
                            ProductId = new Guid("3238c0b8-d4a3-4cfb-9167-695ef4224b6b")
                        },
                        new
                        {
                            Id = new Guid("97ca3d0c-af09-4a53-aab5-5bbb1f5b9a4d"),
                            Caption = "Caption",
                            ImagePath = "https://placewaifu.com/image/93",
                            IsImageFeature = false,
                            ProductId = new Guid("3238c0b8-d4a3-4cfb-9167-695ef4224b6b")
                        },
                        new
                        {
                            Id = new Guid("5a8afac1-c689-42d5-8be0-77cbccd5e06d"),
                            Caption = "Caption",
                            ImagePath = "https://placewaifu.com/image/82",
                            IsImageFeature = true,
                            ProductId = new Guid("0de34a77-a035-4eac-8f1b-5f21ebef4569")
                        },
                        new
                        {
                            Id = new Guid("6fb022c7-7e09-4273-af39-cb6980b88872"),
                            Caption = "Caption",
                            ImagePath = "https://placewaifu.com/image/91",
                            IsImageFeature = false,
                            ProductId = new Guid("0de34a77-a035-4eac-8f1b-5f21ebef4569")
                        },
                        new
                        {
                            Id = new Guid("7a5bc91f-4739-424a-8f2b-f34fdaccda78"),
                            Caption = "Caption",
                            ImagePath = "https://placewaifu.com/image/92",
                            IsImageFeature = false,
                            ProductId = new Guid("0de34a77-a035-4eac-8f1b-5f21ebef4569")
                        },
                        new
                        {
                            Id = new Guid("722e7126-86ef-4b92-b6f3-23a792e13cd1"),
                            Caption = "Caption",
                            ImagePath = "https://placewaifu.com/image/93",
                            IsImageFeature = false,
                            ProductId = new Guid("0de34a77-a035-4eac-8f1b-5f21ebef4569")
                        },
                        new
                        {
                            Id = new Guid("819114c8-a3cd-4443-a65a-0087722157a2"),
                            Caption = "Caption",
                            ImagePath = "https://placewaifu.com/image/83",
                            IsImageFeature = true,
                            ProductId = new Guid("163bd018-c22a-49e5-adb0-2ca2942bc420")
                        },
                        new
                        {
                            Id = new Guid("9520dd3e-20ab-4e9a-8d10-6e8eb8feb1a0"),
                            Caption = "Caption",
                            ImagePath = "https://placewaifu.com/image/91",
                            IsImageFeature = false,
                            ProductId = new Guid("163bd018-c22a-49e5-adb0-2ca2942bc420")
                        },
                        new
                        {
                            Id = new Guid("ebffb68c-81fb-437e-9195-62f57db09755"),
                            Caption = "Caption",
                            ImagePath = "https://placewaifu.com/image/92",
                            IsImageFeature = false,
                            ProductId = new Guid("163bd018-c22a-49e5-adb0-2ca2942bc420")
                        },
                        new
                        {
                            Id = new Guid("93ff9327-f755-47f5-800f-c239a6b8515a"),
                            Caption = "Caption",
                            ImagePath = "https://placewaifu.com/image/93",
                            IsImageFeature = false,
                            ProductId = new Guid("163bd018-c22a-49e5-adb0-2ca2942bc420")
                        },
                        new
                        {
                            Id = new Guid("37fe768d-0324-4401-82e0-7e3a405e071c"),
                            Caption = "Caption",
                            ImagePath = "https://placewaifu.com/image/84",
                            IsImageFeature = true,
                            ProductId = new Guid("1a1f7026-eb10-4632-ba16-c12bbea207b7")
                        },
                        new
                        {
                            Id = new Guid("cb194c55-32c7-46bb-9e49-b4190c677ac5"),
                            Caption = "Caption",
                            ImagePath = "https://placewaifu.com/image/91",
                            IsImageFeature = false,
                            ProductId = new Guid("1a1f7026-eb10-4632-ba16-c12bbea207b7")
                        },
                        new
                        {
                            Id = new Guid("a27dd9e3-1c7e-4c7d-9ab1-d1607e581018"),
                            Caption = "Caption",
                            ImagePath = "https://placewaifu.com/image/92",
                            IsImageFeature = false,
                            ProductId = new Guid("1a1f7026-eb10-4632-ba16-c12bbea207b7")
                        },
                        new
                        {
                            Id = new Guid("896649d3-f2de-489d-ade4-42710192465a"),
                            Caption = "Caption",
                            ImagePath = "https://placewaifu.com/image/93",
                            IsImageFeature = false,
                            ProductId = new Guid("1a1f7026-eb10-4632-ba16-c12bbea207b7")
                        },
                        new
                        {
                            Id = new Guid("3d06b946-2031-4ca7-ae53-7fc4ec497e5b"),
                            Caption = "Caption",
                            ImagePath = "https://placewaifu.com/image/85",
                            IsImageFeature = true,
                            ProductId = new Guid("c861791b-bce9-47a9-84c7-1abdb578d88b")
                        },
                        new
                        {
                            Id = new Guid("d7aaf288-4819-40ed-a7f6-48d99e51236b"),
                            Caption = "Caption",
                            ImagePath = "https://placewaifu.com/image/91",
                            IsImageFeature = false,
                            ProductId = new Guid("c861791b-bce9-47a9-84c7-1abdb578d88b")
                        },
                        new
                        {
                            Id = new Guid("4cf2ec35-7560-4d62-823b-ca47adf8a153"),
                            Caption = "Caption",
                            ImagePath = "https://placewaifu.com/image/92",
                            IsImageFeature = false,
                            ProductId = new Guid("c861791b-bce9-47a9-84c7-1abdb578d88b")
                        },
                        new
                        {
                            Id = new Guid("de0b8227-243b-4b83-bd5f-7b8e8fee9d4f"),
                            Caption = "Caption",
                            ImagePath = "https://placewaifu.com/image/93",
                            IsImageFeature = false,
                            ProductId = new Guid("c861791b-bce9-47a9-84c7-1abdb578d88b")
                        },
                        new
                        {
                            Id = new Guid("28f89bc8-9f0b-4d0b-9942-8da7f5c60e9a"),
                            Caption = "Caption",
                            ImagePath = "https://placewaifu.com/image/86",
                            IsImageFeature = true,
                            ProductId = new Guid("d0d58f20-abe1-4f54-8e44-50e1d226ead4")
                        },
                        new
                        {
                            Id = new Guid("ec6cf9cb-3305-49cd-a256-acb540006295"),
                            Caption = "Caption",
                            ImagePath = "https://placewaifu.com/image/91",
                            IsImageFeature = false,
                            ProductId = new Guid("d0d58f20-abe1-4f54-8e44-50e1d226ead4")
                        },
                        new
                        {
                            Id = new Guid("e1f1127d-27d3-468d-abfd-c28f4ed38381"),
                            Caption = "Caption",
                            ImagePath = "https://placewaifu.com/image/92",
                            IsImageFeature = false,
                            ProductId = new Guid("d0d58f20-abe1-4f54-8e44-50e1d226ead4")
                        },
                        new
                        {
                            Id = new Guid("af06c214-76d9-4e5c-8452-62ac096bbd60"),
                            Caption = "Caption",
                            ImagePath = "https://placewaifu.com/image/93",
                            IsImageFeature = false,
                            ProductId = new Guid("d0d58f20-abe1-4f54-8e44-50e1d226ead4")
                        },
                        new
                        {
                            Id = new Guid("ebed1d8f-96be-4a0d-a9e5-7e77b302f8ed"),
                            Caption = "Caption",
                            ImagePath = "https://placewaifu.com/image/87",
                            IsImageFeature = true,
                            ProductId = new Guid("dcbeea7e-4675-4a01-b59a-a9e1f3e5f4b4")
                        },
                        new
                        {
                            Id = new Guid("07494c60-cf32-434f-9173-85025b7aaec6"),
                            Caption = "Caption",
                            ImagePath = "https://placewaifu.com/image/91",
                            IsImageFeature = false,
                            ProductId = new Guid("dcbeea7e-4675-4a01-b59a-a9e1f3e5f4b4")
                        },
                        new
                        {
                            Id = new Guid("7ce38eba-2c6f-444e-981a-3d2108e947ae"),
                            Caption = "Caption",
                            ImagePath = "https://placewaifu.com/image/92",
                            IsImageFeature = false,
                            ProductId = new Guid("dcbeea7e-4675-4a01-b59a-a9e1f3e5f4b4")
                        },
                        new
                        {
                            Id = new Guid("b1ca0420-7b45-4362-b893-0def6d86dbf5"),
                            Caption = "Caption",
                            ImagePath = "https://placewaifu.com/image/93",
                            IsImageFeature = false,
                            ProductId = new Guid("dcbeea7e-4675-4a01-b59a-a9e1f3e5f4b4")
                        },
                        new
                        {
                            Id = new Guid("e84a56e9-0d91-4df7-b4e9-cb4f8b13ce42"),
                            Caption = "Caption",
                            ImagePath = "https://placewaifu.com/image/88",
                            IsImageFeature = true,
                            ProductId = new Guid("97aac145-947d-4da4-8191-a2a3faa81fce")
                        },
                        new
                        {
                            Id = new Guid("7d7be661-d8a5-4757-b4af-bb20aab57509"),
                            Caption = "Caption",
                            ImagePath = "https://placewaifu.com/image/91",
                            IsImageFeature = false,
                            ProductId = new Guid("97aac145-947d-4da4-8191-a2a3faa81fce")
                        },
                        new
                        {
                            Id = new Guid("7ca04698-1faa-45ce-8c75-f89aca3ccdf3"),
                            Caption = "Caption",
                            ImagePath = "https://placewaifu.com/image/92",
                            IsImageFeature = false,
                            ProductId = new Guid("97aac145-947d-4da4-8191-a2a3faa81fce")
                        },
                        new
                        {
                            Id = new Guid("23226b87-5338-4300-a561-9b283803430b"),
                            Caption = "Caption",
                            ImagePath = "https://placewaifu.com/image/93",
                            IsImageFeature = false,
                            ProductId = new Guid("97aac145-947d-4da4-8191-a2a3faa81fce")
                        },
                        new
                        {
                            Id = new Guid("7a1c3f21-d40d-4137-8b92-01d6a644d26f"),
                            Caption = "Caption",
                            ImagePath = "https://placewaifu.com/image/89",
                            IsImageFeature = true,
                            ProductId = new Guid("0a5b4248-5d36-45aa-89fc-dd913824d34e")
                        },
                        new
                        {
                            Id = new Guid("c5444310-7782-4eff-9961-f5b0cf3571fa"),
                            Caption = "Caption",
                            ImagePath = "https://placewaifu.com/image/91",
                            IsImageFeature = false,
                            ProductId = new Guid("0a5b4248-5d36-45aa-89fc-dd913824d34e")
                        },
                        new
                        {
                            Id = new Guid("0a793a41-7409-4f3c-933c-105c2e707611"),
                            Caption = "Caption",
                            ImagePath = "https://placewaifu.com/image/92",
                            IsImageFeature = false,
                            ProductId = new Guid("0a5b4248-5d36-45aa-89fc-dd913824d34e")
                        },
                        new
                        {
                            Id = new Guid("6bb8e92a-b620-4b27-ab27-56597f3d3d78"),
                            Caption = "Caption",
                            ImagePath = "https://placewaifu.com/image/93",
                            IsImageFeature = false,
                            ProductId = new Guid("0a5b4248-5d36-45aa-89fc-dd913824d34e")
                        },
                        new
                        {
                            Id = new Guid("2713178c-e436-4b43-8179-e261178b1725"),
                            Caption = "Caption",
                            ImagePath = "https://placewaifu.com/image/90",
                            IsImageFeature = true,
                            ProductId = new Guid("da3156b8-3324-4684-8789-9af51316865b")
                        },
                        new
                        {
                            Id = new Guid("718ffbdb-213c-4010-99bc-dec59db60834"),
                            Caption = "Caption",
                            ImagePath = "https://placewaifu.com/image/91",
                            IsImageFeature = false,
                            ProductId = new Guid("da3156b8-3324-4684-8789-9af51316865b")
                        },
                        new
                        {
                            Id = new Guid("916fb773-9961-4b0e-aee8-3c37648d7338"),
                            Caption = "Caption",
                            ImagePath = "https://placewaifu.com/image/92",
                            IsImageFeature = false,
                            ProductId = new Guid("da3156b8-3324-4684-8789-9af51316865b")
                        },
                        new
                        {
                            Id = new Guid("de02a3e6-e0b9-4689-90f4-f108ff1a9908"),
                            Caption = "Caption",
                            ImagePath = "https://placewaifu.com/image/93",
                            IsImageFeature = false,
                            ProductId = new Guid("da3156b8-3324-4684-8789-9af51316865b")
                        },
                        new
                        {
                            Id = new Guid("4657bb12-b1ee-4c88-bd71-06d27fec3844"),
                            Caption = "Caption",
                            ImagePath = "https://placewaifu.com/image/91",
                            IsImageFeature = true,
                            ProductId = new Guid("19400bf1-1da8-4a52-a515-4c36577bc98b")
                        },
                        new
                        {
                            Id = new Guid("7029a69a-dd17-49f4-be40-825b87d26ad6"),
                            Caption = "Caption",
                            ImagePath = "https://placewaifu.com/image/91",
                            IsImageFeature = false,
                            ProductId = new Guid("19400bf1-1da8-4a52-a515-4c36577bc98b")
                        },
                        new
                        {
                            Id = new Guid("f8c37062-0f97-44bd-945d-7286e49b0d5d"),
                            Caption = "Caption",
                            ImagePath = "https://placewaifu.com/image/92",
                            IsImageFeature = false,
                            ProductId = new Guid("19400bf1-1da8-4a52-a515-4c36577bc98b")
                        },
                        new
                        {
                            Id = new Guid("2d60dc64-6836-452c-b5cf-d32af165abc2"),
                            Caption = "Caption",
                            ImagePath = "https://placewaifu.com/image/93",
                            IsImageFeature = false,
                            ProductId = new Guid("19400bf1-1da8-4a52-a515-4c36577bc98b")
                        },
                        new
                        {
                            Id = new Guid("d2095942-97f0-45ef-ba8b-ad4b4f9c9a17"),
                            Caption = "Caption",
                            ImagePath = "https://placewaifu.com/image/92",
                            IsImageFeature = true,
                            ProductId = new Guid("5d01611b-e2ad-4abd-b40e-0450f50d2ec9")
                        },
                        new
                        {
                            Id = new Guid("4dbce868-13e7-43b6-9514-72ffce22613b"),
                            Caption = "Caption",
                            ImagePath = "https://placewaifu.com/image/91",
                            IsImageFeature = false,
                            ProductId = new Guid("5d01611b-e2ad-4abd-b40e-0450f50d2ec9")
                        },
                        new
                        {
                            Id = new Guid("17e3ecc3-f7ae-4dbb-8bd3-31a172488a85"),
                            Caption = "Caption",
                            ImagePath = "https://placewaifu.com/image/92",
                            IsImageFeature = false,
                            ProductId = new Guid("5d01611b-e2ad-4abd-b40e-0450f50d2ec9")
                        },
                        new
                        {
                            Id = new Guid("055a6494-112e-4657-b999-fceff2e4805c"),
                            Caption = "Caption",
                            ImagePath = "https://placewaifu.com/image/93",
                            IsImageFeature = false,
                            ProductId = new Guid("5d01611b-e2ad-4abd-b40e-0450f50d2ec9")
                        },
                        new
                        {
                            Id = new Guid("8e4e13c3-261b-4112-b4c4-b16120941f12"),
                            Caption = "Caption",
                            ImagePath = "https://placewaifu.com/image/93",
                            IsImageFeature = true,
                            ProductId = new Guid("cff0eb9e-3b50-4ade-9f56-cb0e4ab4d617")
                        },
                        new
                        {
                            Id = new Guid("4a6cf011-acb6-49d0-84f9-7ba10d522b81"),
                            Caption = "Caption",
                            ImagePath = "https://placewaifu.com/image/91",
                            IsImageFeature = false,
                            ProductId = new Guid("cff0eb9e-3b50-4ade-9f56-cb0e4ab4d617")
                        },
                        new
                        {
                            Id = new Guid("d3e9a654-f80f-4403-b2b7-163e70ca0ed3"),
                            Caption = "Caption",
                            ImagePath = "https://placewaifu.com/image/92",
                            IsImageFeature = false,
                            ProductId = new Guid("cff0eb9e-3b50-4ade-9f56-cb0e4ab4d617")
                        },
                        new
                        {
                            Id = new Guid("2516d616-4f28-4194-ba3c-de1bd1b5f158"),
                            Caption = "Caption",
                            ImagePath = "https://placewaifu.com/image/93",
                            IsImageFeature = false,
                            ProductId = new Guid("cff0eb9e-3b50-4ade-9f56-cb0e4ab4d617")
                        },
                        new
                        {
                            Id = new Guid("61692503-060e-45f4-9cc7-27ea914b2c67"),
                            Caption = "Caption",
                            ImagePath = "https://placewaifu.com/image/94",
                            IsImageFeature = true,
                            ProductId = new Guid("9089f19c-473d-40b1-b7b3-e0f5f6c8f8df")
                        },
                        new
                        {
                            Id = new Guid("0e4b13b0-53f6-4e7e-a0c2-0389b49f28aa"),
                            Caption = "Caption",
                            ImagePath = "https://placewaifu.com/image/91",
                            IsImageFeature = false,
                            ProductId = new Guid("9089f19c-473d-40b1-b7b3-e0f5f6c8f8df")
                        },
                        new
                        {
                            Id = new Guid("8d82d82c-1b95-43c6-b9ca-1cb2151364db"),
                            Caption = "Caption",
                            ImagePath = "https://placewaifu.com/image/92",
                            IsImageFeature = false,
                            ProductId = new Guid("9089f19c-473d-40b1-b7b3-e0f5f6c8f8df")
                        },
                        new
                        {
                            Id = new Guid("16617ad3-42c6-4ab2-805a-3613ad324165"),
                            Caption = "Caption",
                            ImagePath = "https://placewaifu.com/image/93",
                            IsImageFeature = false,
                            ProductId = new Guid("9089f19c-473d-40b1-b7b3-e0f5f6c8f8df")
                        },
                        new
                        {
                            Id = new Guid("cf5d58af-7ce5-4ee4-9556-6ea873965fca"),
                            Caption = "Caption",
                            ImagePath = "https://placewaifu.com/image/95",
                            IsImageFeature = true,
                            ProductId = new Guid("f9ac3e9c-da9e-4aba-8a12-291a3655864b")
                        },
                        new
                        {
                            Id = new Guid("286e522a-2ff1-4af6-b77f-d1e94f4c86e5"),
                            Caption = "Caption",
                            ImagePath = "https://placewaifu.com/image/91",
                            IsImageFeature = false,
                            ProductId = new Guid("f9ac3e9c-da9e-4aba-8a12-291a3655864b")
                        },
                        new
                        {
                            Id = new Guid("ea436739-d720-4ec2-af89-22597a350541"),
                            Caption = "Caption",
                            ImagePath = "https://placewaifu.com/image/92",
                            IsImageFeature = false,
                            ProductId = new Guid("f9ac3e9c-da9e-4aba-8a12-291a3655864b")
                        },
                        new
                        {
                            Id = new Guid("5feaeff3-9daa-467a-9090-cfd721069447"),
                            Caption = "Caption",
                            ImagePath = "https://placewaifu.com/image/93",
                            IsImageFeature = false,
                            ProductId = new Guid("f9ac3e9c-da9e-4aba-8a12-291a3655864b")
                        });
                });

            modelBuilder.Entity("StorageSystem.Domain.Entities.ProductSupplier", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,4)");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SupplierId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("SupplierId");

                    b.ToTable("ProductSuppliers");
                });

            modelBuilder.Entity("StorageSystem.Domain.Entities.ProductUnit", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<Guid>("UnitId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("UnitId");

                    b.ToTable("ProductUnits");

                    b.HasData(
                        new
                        {
                            Id = new Guid("793a75ec-eed8-4043-acca-f508caa0db71"),
                            ProductId = new Guid("5d01611b-e2ad-4abd-b40e-0450f50d2ec9"),
                            Quantity = 100,
                            UnitId = new Guid("4b703409-a32a-49cf-9943-d5a68dbedd6f")
                        },
                        new
                        {
                            Id = new Guid("276d8bb6-39d6-4b0c-b800-f6dfbbec3e5a"),
                            ProductId = new Guid("5d01611b-e2ad-4abd-b40e-0450f50d2ec9"),
                            Quantity = 100,
                            UnitId = new Guid("54cb56aa-a710-47e0-a386-4cc493d46747")
                        },
                        new
                        {
                            Id = new Guid("38d78523-7310-48ec-829d-a987808a619d"),
                            ProductId = new Guid("c861791b-bce9-47a9-84c7-1abdb578d88b"),
                            Quantity = 100,
                            UnitId = new Guid("bb7b0969-4383-446f-8ab9-6d766df08359")
                        });
                });

            modelBuilder.Entity("StorageSystem.Domain.Entities.Supplier", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("DateCreated")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Suppliers");
                });

            modelBuilder.Entity("StorageSystem.Domain.Entities.Unit", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("DateCreated")
                        .HasColumnType("datetimeoffset");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Units");

                    b.HasData(
                        new
                        {
                            Id = new Guid("4b703409-a32a-49cf-9943-d5a68dbedd6f"),
                            DateCreated = new DateTimeOffset(new DateTime(2024, 1, 17, 22, 15, 20, 46, DateTimeKind.Unspecified).AddTicks(4071), new TimeSpan(0, 7, 0, 0, 0)),
                            IsDeleted = false,
                            Name = "Thùng"
                        },
                        new
                        {
                            Id = new Guid("bb7b0969-4383-446f-8ab9-6d766df08359"),
                            DateCreated = new DateTimeOffset(new DateTime(2024, 1, 17, 22, 15, 20, 46, DateTimeKind.Unspecified).AddTicks(4087), new TimeSpan(0, 7, 0, 0, 0)),
                            IsDeleted = false,
                            Name = "Kg"
                        },
                        new
                        {
                            Id = new Guid("54cb56aa-a710-47e0-a386-4cc493d46747"),
                            DateCreated = new DateTimeOffset(new DateTime(2024, 1, 17, 22, 15, 20, 46, DateTimeKind.Unspecified).AddTicks(4097), new TimeSpan(0, 7, 0, 0, 0)),
                            IsDeleted = false,
                            Name = "Hộp"
                        });
                });

            modelBuilder.Entity("StorageSystem.Persistence.Models.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("RefreshToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("RefreshTokenExpiryTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("Users", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("StorageSystem.Persistence.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("StorageSystem.Persistence.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StorageSystem.Persistence.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("StorageSystem.Persistence.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("StorageSystem.Domain.Entities.Bill", b =>
                {
                    b.HasOne("StorageSystem.Domain.Entities.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("StorageSystem.Domain.Entities.BillDetail", b =>
                {
                    b.HasOne("StorageSystem.Domain.Entities.Bill", "Bill")
                        .WithMany("BillDetails")
                        .HasForeignKey("BillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StorageSystem.Domain.Entities.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bill");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("StorageSystem.Domain.Entities.Coupon", b =>
                {
                    b.HasOne("StorageSystem.Domain.Entities.Supplier", "Supplier")
                        .WithMany()
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("StorageSystem.Domain.Entities.CouponDetail", b =>
                {
                    b.HasOne("StorageSystem.Domain.Entities.Coupon", "Coupon")
                        .WithMany("CouponDetails")
                        .HasForeignKey("CouponId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StorageSystem.Domain.Entities.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Coupon");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("StorageSystem.Domain.Entities.Order", b =>
                {
                    b.HasOne("StorageSystem.Domain.Entities.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId1");

                    b.HasOne("StorageSystem.Domain.Entities.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StorageSystem.Domain.Entities.Unit", "Unit")
                        .WithMany()
                        .HasForeignKey("UnitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Product");

                    b.Navigation("Unit");
                });

            modelBuilder.Entity("StorageSystem.Domain.Entities.Product", b =>
                {
                    b.HasOne("StorageSystem.Domain.Entities.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("StorageSystem.Domain.Entities.ProductImage", b =>
                {
                    b.HasOne("StorageSystem.Domain.Entities.Product", "Product")
                        .WithMany("ProductImages")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("StorageSystem.Domain.Entities.ProductSupplier", b =>
                {
                    b.HasOne("StorageSystem.Domain.Entities.Product", "Product")
                        .WithMany("ProductSuppliers")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StorageSystem.Domain.Entities.Supplier", "Supplier")
                        .WithMany("ProductSuppliers")
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("StorageSystem.Domain.Entities.ProductUnit", b =>
                {
                    b.HasOne("StorageSystem.Domain.Entities.Product", "Product")
                        .WithMany("ProductUnits")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StorageSystem.Domain.Entities.Unit", "Unit")
                        .WithMany("ProductUnits")
                        .HasForeignKey("UnitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("Unit");
                });

            modelBuilder.Entity("StorageSystem.Domain.Entities.Bill", b =>
                {
                    b.Navigation("BillDetails");
                });

            modelBuilder.Entity("StorageSystem.Domain.Entities.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("StorageSystem.Domain.Entities.Coupon", b =>
                {
                    b.Navigation("CouponDetails");
                });

            modelBuilder.Entity("StorageSystem.Domain.Entities.Product", b =>
                {
                    b.Navigation("ProductImages");

                    b.Navigation("ProductSuppliers");

                    b.Navigation("ProductUnits");
                });

            modelBuilder.Entity("StorageSystem.Domain.Entities.Supplier", b =>
                {
                    b.Navigation("ProductSuppliers");
                });

            modelBuilder.Entity("StorageSystem.Domain.Entities.Unit", b =>
                {
                    b.Navigation("ProductUnits");
                });
#pragma warning restore 612, 618
        }
    }
}
