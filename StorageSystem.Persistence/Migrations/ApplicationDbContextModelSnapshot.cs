// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StorageSystem.Persistence;

#nullable disable

namespace StorageSystem.Persistence.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.24")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("Roles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("RoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("UserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("UserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("UserTokens", (string)null);
                });

            modelBuilder.Entity("StorageSystem.Domain.Entities.Bill", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("DateCreated")
                        .HasColumnType("datetimeoffset");

                    b.Property<decimal?>("Deposit")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("OwnerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(18,4)");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("Bills");
                });

            modelBuilder.Entity("StorageSystem.Domain.Entities.BillDetail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BillId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal?>("DiscountAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,4)");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BillId");

                    b.HasIndex("ProductId");

                    b.ToTable("BillDetails");
                });

            modelBuilder.Entity("StorageSystem.Domain.Entities.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("DateCreated")
                        .HasColumnType("datetimeoffset");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = new Guid("9be53c65-521f-417a-b7de-13af7b0bdfc4"),
                            DateCreated = new DateTimeOffset(new DateTime(2024, 1, 30, 19, 15, 29, 323, DateTimeKind.Unspecified).AddTicks(2648), new TimeSpan(0, 7, 0, 0, 0)),
                            IsDeleted = false,
                            Name = "Vật liệu xây dựng"
                        },
                        new
                        {
                            Id = new Guid("cf846c38-b43c-494d-bbbf-838a65ec3299"),
                            DateCreated = new DateTimeOffset(new DateTime(2024, 1, 30, 19, 15, 29, 323, DateTimeKind.Unspecified).AddTicks(2658), new TimeSpan(0, 7, 0, 0, 0)),
                            IsDeleted = false,
                            Name = "Đồ điện"
                        },
                        new
                        {
                            Id = new Guid("de6b4a9e-1d88-48db-b21d-cfb3ee139df9"),
                            DateCreated = new DateTimeOffset(new DateTime(2024, 1, 30, 19, 15, 29, 323, DateTimeKind.Unspecified).AddTicks(2662), new TimeSpan(0, 7, 0, 0, 0)),
                            IsDeleted = false,
                            Name = "Đồ gia dụng"
                        },
                        new
                        {
                            Id = new Guid("a4533b2f-1174-4587-8fe8-3333295cc0ac"),
                            DateCreated = new DateTimeOffset(new DateTime(2024, 1, 30, 19, 15, 29, 323, DateTimeKind.Unspecified).AddTicks(2665), new TimeSpan(0, 7, 0, 0, 0)),
                            IsDeleted = false,
                            Name = "Vật phẩm trang trí"
                        });
                });

            modelBuilder.Entity("StorageSystem.Domain.Entities.Coupon", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("AmountPaid")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTimeOffset>("DateCreated")
                        .HasColumnType("datetimeoffset");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("OwnerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SupplierId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(18,4)");

                    b.HasKey("Id");

                    b.HasIndex("SupplierId");

                    b.ToTable("Coupons");
                });

            modelBuilder.Entity("StorageSystem.Domain.Entities.CouponDetail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CouponId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,4)");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CouponId");

                    b.HasIndex("ProductId");

                    b.ToTable("CouponDetails");
                });

            modelBuilder.Entity("StorageSystem.Domain.Entities.Customer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("DateCreated")
                        .HasColumnType("datetimeoffset");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("OrderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("StorageSystem.Domain.Entities.Order", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CustomerId1")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("DateCreated")
                        .HasColumnType("datetimeoffset");

                    b.Property<decimal?>("DiscountAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("OwnerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,4)");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("StatusOrder")
                        .HasColumnType("int");

                    b.Property<Guid>("UnitId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId1");

                    b.HasIndex("ProductId");

                    b.HasIndex("UnitId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("StorageSystem.Domain.Entities.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("DateCreated")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("OriginalPrice")
                        .HasColumnType("decimal(18,4)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,4)");

                    b.Property<string>("ThumbnailImage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = new Guid("484c3f38-bfe0-42b9-8e9c-f30f1aa86fd3"),
                            CategoryId = new Guid("9be53c65-521f-417a-b7de-13af7b0bdfc4"),
                            DateCreated = new DateTimeOffset(new DateTime(2024, 1, 30, 19, 15, 29, 323, DateTimeKind.Unspecified).AddTicks(2841), new TimeSpan(0, 7, 0, 0, 0)),
                            Description = "Description",
                            IsDeleted = false,
                            Name = "Tony Reichert",
                            OriginalPrice = 110000m,
                            Price = 405000m,
                            ThumbnailImage = "https://placewaifu.com/image/80"
                        },
                        new
                        {
                            Id = new Guid("3238c0b8-d4a3-4cfb-9167-695ef4224b6b"),
                            CategoryId = new Guid("9be53c65-521f-417a-b7de-13af7b0bdfc4"),
                            DateCreated = new DateTimeOffset(new DateTime(2024, 1, 30, 19, 15, 29, 323, DateTimeKind.Unspecified).AddTicks(2848), new TimeSpan(0, 7, 0, 0, 0)),
                            Description = "Description",
                            IsDeleted = false,
                            Name = "Zoey Lang",
                            OriginalPrice = 110000m,
                            Price = 406000m,
                            ThumbnailImage = "https://placewaifu.com/image/81"
                        },
                        new
                        {
                            Id = new Guid("0de34a77-a035-4eac-8f1b-5f21ebef4569"),
                            CategoryId = new Guid("cf846c38-b43c-494d-bbbf-838a65ec3299"),
                            DateCreated = new DateTimeOffset(new DateTime(2024, 1, 30, 19, 15, 29, 323, DateTimeKind.Unspecified).AddTicks(2852), new TimeSpan(0, 7, 0, 0, 0)),
                            Description = "Description",
                            IsDeleted = false,
                            Name = "Jane Fisher",
                            OriginalPrice = 110000m,
                            Price = 407000m,
                            ThumbnailImage = "https://placewaifu.com/image/82"
                        },
                        new
                        {
                            Id = new Guid("163bd018-c22a-49e5-adb0-2ca2942bc420"),
                            CategoryId = new Guid("de6b4a9e-1d88-48db-b21d-cfb3ee139df9"),
                            DateCreated = new DateTimeOffset(new DateTime(2024, 1, 30, 19, 15, 29, 323, DateTimeKind.Unspecified).AddTicks(2857), new TimeSpan(0, 7, 0, 0, 0)),
                            Description = "Description",
                            IsDeleted = false,
                            Name = "William Howard",
                            OriginalPrice = 110000m,
                            Price = 408000m,
                            ThumbnailImage = "https://placewaifu.com/image/83"
                        },
                        new
                        {
                            Id = new Guid("1a1f7026-eb10-4632-ba16-c12bbea207b7"),
                            CategoryId = new Guid("a4533b2f-1174-4587-8fe8-3333295cc0ac"),
                            DateCreated = new DateTimeOffset(new DateTime(2024, 1, 30, 19, 15, 29, 323, DateTimeKind.Unspecified).AddTicks(2862), new TimeSpan(0, 7, 0, 0, 0)),
                            Description = "Description",
                            IsDeleted = false,
                            Name = "Kristen Copper",
                            OriginalPrice = 110000m,
                            Price = 409000m,
                            ThumbnailImage = "https://placewaifu.com/image/84"
                        },
                        new
                        {
                            Id = new Guid("c861791b-bce9-47a9-84c7-1abdb578d88b"),
                            CategoryId = new Guid("a4533b2f-1174-4587-8fe8-3333295cc0ac"),
                            DateCreated = new DateTimeOffset(new DateTime(2024, 1, 30, 19, 15, 29, 323, DateTimeKind.Unspecified).AddTicks(2867), new TimeSpan(0, 7, 0, 0, 0)),
                            Description = "Description",
                            IsDeleted = false,
                            Name = "Brian Kim",
                            OriginalPrice = 110000m,
                            Price = 410000m,
                            ThumbnailImage = "https://placewaifu.com/image/85"
                        },
                        new
                        {
                            Id = new Guid("d0d58f20-abe1-4f54-8e44-50e1d226ead4"),
                            CategoryId = new Guid("9be53c65-521f-417a-b7de-13af7b0bdfc4"),
                            DateCreated = new DateTimeOffset(new DateTime(2024, 1, 30, 19, 15, 29, 323, DateTimeKind.Unspecified).AddTicks(2871), new TimeSpan(0, 7, 0, 0, 0)),
                            Description = "Description",
                            IsDeleted = false,
                            Name = "Michael Hunt",
                            OriginalPrice = 110000m,
                            Price = 411000m,
                            ThumbnailImage = "https://placewaifu.com/image/86"
                        },
                        new
                        {
                            Id = new Guid("dcbeea7e-4675-4a01-b59a-a9e1f3e5f4b4"),
                            CategoryId = new Guid("9be53c65-521f-417a-b7de-13af7b0bdfc4"),
                            DateCreated = new DateTimeOffset(new DateTime(2024, 1, 30, 19, 15, 29, 323, DateTimeKind.Unspecified).AddTicks(2875), new TimeSpan(0, 7, 0, 0, 0)),
                            Description = "Description",
                            IsDeleted = false,
                            Name = "Samantha Brooks",
                            OriginalPrice = 110000m,
                            Price = 412000m,
                            ThumbnailImage = "https://placewaifu.com/image/87"
                        },
                        new
                        {
                            Id = new Guid("97aac145-947d-4da4-8191-a2a3faa81fce"),
                            CategoryId = new Guid("de6b4a9e-1d88-48db-b21d-cfb3ee139df9"),
                            DateCreated = new DateTimeOffset(new DateTime(2024, 1, 30, 19, 15, 29, 323, DateTimeKind.Unspecified).AddTicks(2882), new TimeSpan(0, 7, 0, 0, 0)),
                            Description = "Description",
                            IsDeleted = false,
                            Name = "Frank Harrison",
                            OriginalPrice = 110000m,
                            Price = 413000m,
                            ThumbnailImage = "https://placewaifu.com/image/88"
                        },
                        new
                        {
                            Id = new Guid("0a5b4248-5d36-45aa-89fc-dd913824d34e"),
                            CategoryId = new Guid("de6b4a9e-1d88-48db-b21d-cfb3ee139df9"),
                            DateCreated = new DateTimeOffset(new DateTime(2024, 1, 30, 19, 15, 29, 323, DateTimeKind.Unspecified).AddTicks(2885), new TimeSpan(0, 7, 0, 0, 0)),
                            Description = "Description",
                            IsDeleted = false,
                            Name = "Emma Adams",
                            OriginalPrice = 110000m,
                            Price = 414000m,
                            ThumbnailImage = "https://placewaifu.com/image/89"
                        },
                        new
                        {
                            Id = new Guid("da3156b8-3324-4684-8789-9af51316865b"),
                            CategoryId = new Guid("de6b4a9e-1d88-48db-b21d-cfb3ee139df9"),
                            DateCreated = new DateTimeOffset(new DateTime(2024, 1, 30, 19, 15, 29, 323, DateTimeKind.Unspecified).AddTicks(2888), new TimeSpan(0, 7, 0, 0, 0)),
                            Description = "Description",
                            IsDeleted = false,
                            Name = "Brandon Stevens",
                            OriginalPrice = 110000m,
                            Price = 415000m,
                            ThumbnailImage = "https://placewaifu.com/image/90"
                        },
                        new
                        {
                            Id = new Guid("19400bf1-1da8-4a52-a515-4c36577bc98b"),
                            CategoryId = new Guid("cf846c38-b43c-494d-bbbf-838a65ec3299"),
                            DateCreated = new DateTimeOffset(new DateTime(2024, 1, 30, 19, 15, 29, 323, DateTimeKind.Unspecified).AddTicks(2891), new TimeSpan(0, 7, 0, 0, 0)),
                            Description = "Description",
                            IsDeleted = false,
                            Name = "Megan Richards",
                            OriginalPrice = 110000m,
                            Price = 416000m,
                            ThumbnailImage = "https://placewaifu.com/image/91"
                        },
                        new
                        {
                            Id = new Guid("5d01611b-e2ad-4abd-b40e-0450f50d2ec9"),
                            CategoryId = new Guid("cf846c38-b43c-494d-bbbf-838a65ec3299"),
                            DateCreated = new DateTimeOffset(new DateTime(2024, 1, 30, 19, 15, 29, 323, DateTimeKind.Unspecified).AddTicks(2895), new TimeSpan(0, 7, 0, 0, 0)),
                            Description = "Description",
                            IsDeleted = false,
                            Name = "Oliver Scott",
                            OriginalPrice = 110000m,
                            Price = 305000m,
                            ThumbnailImage = "https://placewaifu.com/image/92"
                        },
                        new
                        {
                            Id = new Guid("cff0eb9e-3b50-4ade-9f56-cb0e4ab4d617"),
                            CategoryId = new Guid("9be53c65-521f-417a-b7de-13af7b0bdfc4"),
                            DateCreated = new DateTimeOffset(new DateTime(2024, 1, 30, 19, 15, 29, 323, DateTimeKind.Unspecified).AddTicks(2898), new TimeSpan(0, 7, 0, 0, 0)),
                            Description = "Description",
                            IsDeleted = false,
                            Name = "Grace Allen",
                            OriginalPrice = 110000m,
                            Price = 200000m,
                            ThumbnailImage = "https://placewaifu.com/image/93"
                        },
                        new
                        {
                            Id = new Guid("9089f19c-473d-40b1-b7b3-e0f5f6c8f8df"),
                            CategoryId = new Guid("a4533b2f-1174-4587-8fe8-3333295cc0ac"),
                            DateCreated = new DateTimeOffset(new DateTime(2024, 1, 30, 19, 15, 29, 323, DateTimeKind.Unspecified).AddTicks(2901), new TimeSpan(0, 7, 0, 0, 0)),
                            Description = "Description",
                            IsDeleted = false,
                            Name = "Noah Carter",
                            OriginalPrice = 110000m,
                            Price = 307000m,
                            ThumbnailImage = "https://placewaifu.com/image/94"
                        },
                        new
                        {
                            Id = new Guid("f9ac3e9c-da9e-4aba-8a12-291a3655864b"),
                            CategoryId = new Guid("de6b4a9e-1d88-48db-b21d-cfb3ee139df9"),
                            DateCreated = new DateTimeOffset(new DateTime(2024, 1, 30, 19, 15, 29, 323, DateTimeKind.Unspecified).AddTicks(2904), new TimeSpan(0, 7, 0, 0, 0)),
                            Description = "Description",
                            IsDeleted = false,
                            Name = "Ava Perez",
                            OriginalPrice = 110000m,
                            Price = 405000m,
                            ThumbnailImage = "https://placewaifu.com/image/95"
                        },
                        new
                        {
                            Id = new Guid("6a9955a7-5c78-40fa-8020-174f1018f797"),
                            CategoryId = new Guid("a4533b2f-1174-4587-8fe8-3333295cc0ac"),
                            DateCreated = new DateTimeOffset(new DateTime(2024, 1, 30, 19, 15, 29, 323, DateTimeKind.Unspecified).AddTicks(2909), new TimeSpan(0, 7, 0, 0, 0)),
                            Description = "Description",
                            IsDeleted = false,
                            Name = "Noah Carter",
                            OriginalPrice = 110000m,
                            Price = 406000m,
                            ThumbnailImage = "https://placewaifu.com/image/96"
                        },
                        new
                        {
                            Id = new Guid("f35c176b-c70a-4fb5-b9b3-885eb8731901"),
                            CategoryId = new Guid("de6b4a9e-1d88-48db-b21d-cfb3ee139df9"),
                            DateCreated = new DateTimeOffset(new DateTime(2024, 1, 30, 19, 15, 29, 323, DateTimeKind.Unspecified).AddTicks(2912), new TimeSpan(0, 7, 0, 0, 0)),
                            Description = "Description",
                            IsDeleted = false,
                            Name = "Ava Perez",
                            OriginalPrice = 110000m,
                            Price = 417000m,
                            ThumbnailImage = "https://placewaifu.com/image/97"
                        },
                        new
                        {
                            Id = new Guid("e9416abf-ab8a-4b69-8bb5-3f3a8b7024ad"),
                            CategoryId = new Guid("a4533b2f-1174-4587-8fe8-3333295cc0ac"),
                            DateCreated = new DateTimeOffset(new DateTime(2024, 1, 30, 19, 15, 29, 323, DateTimeKind.Unspecified).AddTicks(2962), new TimeSpan(0, 7, 0, 0, 0)),
                            Description = "Description",
                            IsDeleted = false,
                            Name = "Ava Perez",
                            OriginalPrice = 110000m,
                            Price = 405000m,
                            ThumbnailImage = "https://placewaifu.com/image/97"
                        },
                        new
                        {
                            Id = new Guid("9244f89d-1b5d-44cd-8a7f-1922d464e336"),
                            CategoryId = new Guid("a4533b2f-1174-4587-8fe8-3333295cc0ac"),
                            DateCreated = new DateTimeOffset(new DateTime(2024, 1, 30, 19, 15, 29, 323, DateTimeKind.Unspecified).AddTicks(2966), new TimeSpan(0, 7, 0, 0, 0)),
                            Description = "Description",
                            IsDeleted = false,
                            Name = "Ava Perez",
                            OriginalPrice = 110000m,
                            Price = 300000m,
                            ThumbnailImage = "https://placewaifu.com/image/97"
                        });
                });

            modelBuilder.Entity("StorageSystem.Domain.Entities.ProductImage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Caption")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("IsImageFeature")
                        .HasColumnType("bit");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductImages");

                    b.HasData(
                        new
                        {
                            Id = new Guid("0d70e2fa-632a-4bb9-9d74-60eb600d2e34"),
                            Caption = "Caption",
                            ImagePath = "https://placewaifu.com/image/80",
                            IsImageFeature = true,
                            ProductId = new Guid("484c3f38-bfe0-42b9-8e9c-f30f1aa86fd3")
                        },
                        new
                        {
                            Id = new Guid("b4b6a00f-a32c-4fcc-a101-01f1995d29eb"),
                            Caption = "Caption",
                            ImagePath = "https://placewaifu.com/image/91",
                            IsImageFeature = false,
                            ProductId = new Guid("484c3f38-bfe0-42b9-8e9c-f30f1aa86fd3")
                        },
                        new
                        {
                            Id = new Guid("48e09370-4e1b-4465-8f41-ffde199d4fcb"),
                            Caption = "Caption",
                            ImagePath = "https://placewaifu.com/image/92",
                            IsImageFeature = false,
                            ProductId = new Guid("484c3f38-bfe0-42b9-8e9c-f30f1aa86fd3")
                        },
                        new
                        {
                            Id = new Guid("9fc53e32-b914-4766-b6e0-e6372fd3fccd"),
                            Caption = "Caption",
                            ImagePath = "https://placewaifu.com/image/93",
                            IsImageFeature = false,
                            ProductId = new Guid("484c3f38-bfe0-42b9-8e9c-f30f1aa86fd3")
                        },
                        new
                        {
                            Id = new Guid("d96e3ae2-9e00-462b-9838-70b67cf0144b"),
                            Caption = "Caption",
                            ImagePath = "https://placewaifu.com/image/81",
                            IsImageFeature = true,
                            ProductId = new Guid("3238c0b8-d4a3-4cfb-9167-695ef4224b6b")
                        },
                        new
                        {
                            Id = new Guid("9fd65472-1769-4bc1-b901-1901919a33d0"),
                            Caption = "Caption",
                            ImagePath = "https://placewaifu.com/image/91",
                            IsImageFeature = false,
                            ProductId = new Guid("3238c0b8-d4a3-4cfb-9167-695ef4224b6b")
                        },
                        new
                        {
                            Id = new Guid("367a882c-b915-4bd7-9e6e-1079127de2c5"),
                            Caption = "Caption",
                            ImagePath = "https://placewaifu.com/image/92",
                            IsImageFeature = false,
                            ProductId = new Guid("3238c0b8-d4a3-4cfb-9167-695ef4224b6b")
                        },
                        new
                        {
                            Id = new Guid("bef6dc99-cfbd-4bdf-a1be-1c1e5a6f8eec"),
                            Caption = "Caption",
                            ImagePath = "https://placewaifu.com/image/93",
                            IsImageFeature = false,
                            ProductId = new Guid("3238c0b8-d4a3-4cfb-9167-695ef4224b6b")
                        },
                        new
                        {
                            Id = new Guid("7cb52260-78f7-4b8d-b1a3-ded6cf07e521"),
                            Caption = "Caption",
                            ImagePath = "https://placewaifu.com/image/82",
                            IsImageFeature = true,
                            ProductId = new Guid("0de34a77-a035-4eac-8f1b-5f21ebef4569")
                        },
                        new
                        {
                            Id = new Guid("11770058-d059-4dea-9edf-890a1e672285"),
                            Caption = "Caption",
                            ImagePath = "https://placewaifu.com/image/91",
                            IsImageFeature = false,
                            ProductId = new Guid("0de34a77-a035-4eac-8f1b-5f21ebef4569")
                        },
                        new
                        {
                            Id = new Guid("dc731071-a736-408b-afce-08a7a2189842"),
                            Caption = "Caption",
                            ImagePath = "https://placewaifu.com/image/92",
                            IsImageFeature = false,
                            ProductId = new Guid("0de34a77-a035-4eac-8f1b-5f21ebef4569")
                        },
                        new
                        {
                            Id = new Guid("98c068aa-3d4e-4a5e-b4ec-3e8e81adb140"),
                            Caption = "Caption",
                            ImagePath = "https://placewaifu.com/image/93",
                            IsImageFeature = false,
                            ProductId = new Guid("0de34a77-a035-4eac-8f1b-5f21ebef4569")
                        },
                        new
                        {
                            Id = new Guid("be396d5c-a51e-4c31-9a91-78ccf237c469"),
                            Caption = "Caption",
                            ImagePath = "https://placewaifu.com/image/83",
                            IsImageFeature = true,
                            ProductId = new Guid("163bd018-c22a-49e5-adb0-2ca2942bc420")
                        },
                        new
                        {
                            Id = new Guid("f2ac7dd0-d3a7-4bdb-97a7-2e34608f2bf5"),
                            Caption = "Caption",
                            ImagePath = "https://placewaifu.com/image/91",
                            IsImageFeature = false,
                            ProductId = new Guid("163bd018-c22a-49e5-adb0-2ca2942bc420")
                        },
                        new
                        {
                            Id = new Guid("cb25729f-8388-48e1-b090-fa6489d36a14"),
                            Caption = "Caption",
                            ImagePath = "https://placewaifu.com/image/92",
                            IsImageFeature = false,
                            ProductId = new Guid("163bd018-c22a-49e5-adb0-2ca2942bc420")
                        },
                        new
                        {
                            Id = new Guid("b56aab3a-e291-468a-81d2-c4caeafc71ae"),
                            Caption = "Caption",
                            ImagePath = "https://placewaifu.com/image/93",
                            IsImageFeature = false,
                            ProductId = new Guid("163bd018-c22a-49e5-adb0-2ca2942bc420")
                        },
                        new
                        {
                            Id = new Guid("2e150789-5f8c-46d7-a396-55ac76950fd1"),
                            Caption = "Caption",
                            ImagePath = "https://placewaifu.com/image/84",
                            IsImageFeature = true,
                            ProductId = new Guid("1a1f7026-eb10-4632-ba16-c12bbea207b7")
                        },
                        new
                        {
                            Id = new Guid("bf8e4c50-917e-4b81-aa68-91995fe886be"),
                            Caption = "Caption",
                            ImagePath = "https://placewaifu.com/image/91",
                            IsImageFeature = false,
                            ProductId = new Guid("1a1f7026-eb10-4632-ba16-c12bbea207b7")
                        },
                        new
                        {
                            Id = new Guid("773c37d8-3cde-47dc-8422-5d43be71e140"),
                            Caption = "Caption",
                            ImagePath = "https://placewaifu.com/image/92",
                            IsImageFeature = false,
                            ProductId = new Guid("1a1f7026-eb10-4632-ba16-c12bbea207b7")
                        },
                        new
                        {
                            Id = new Guid("352b1f53-1a8e-44c1-8998-b312f5b98cd9"),
                            Caption = "Caption",
                            ImagePath = "https://placewaifu.com/image/93",
                            IsImageFeature = false,
                            ProductId = new Guid("1a1f7026-eb10-4632-ba16-c12bbea207b7")
                        },
                        new
                        {
                            Id = new Guid("65aba86d-89dc-490e-94d5-2be685c9794c"),
                            Caption = "Caption",
                            ImagePath = "https://placewaifu.com/image/85",
                            IsImageFeature = true,
                            ProductId = new Guid("c861791b-bce9-47a9-84c7-1abdb578d88b")
                        },
                        new
                        {
                            Id = new Guid("a787402b-d851-408b-90f2-6e3703ccdc17"),
                            Caption = "Caption",
                            ImagePath = "https://placewaifu.com/image/91",
                            IsImageFeature = false,
                            ProductId = new Guid("c861791b-bce9-47a9-84c7-1abdb578d88b")
                        },
                        new
                        {
                            Id = new Guid("fcd2ae74-3b86-4363-90be-8e042e2982ea"),
                            Caption = "Caption",
                            ImagePath = "https://placewaifu.com/image/92",
                            IsImageFeature = false,
                            ProductId = new Guid("c861791b-bce9-47a9-84c7-1abdb578d88b")
                        },
                        new
                        {
                            Id = new Guid("5d50baa1-34c3-41a9-8f6b-8f68854ebbea"),
                            Caption = "Caption",
                            ImagePath = "https://placewaifu.com/image/93",
                            IsImageFeature = false,
                            ProductId = new Guid("c861791b-bce9-47a9-84c7-1abdb578d88b")
                        },
                        new
                        {
                            Id = new Guid("60c4eb56-8500-4512-a499-baf5fefbd2f7"),
                            Caption = "Caption",
                            ImagePath = "https://placewaifu.com/image/86",
                            IsImageFeature = true,
                            ProductId = new Guid("d0d58f20-abe1-4f54-8e44-50e1d226ead4")
                        },
                        new
                        {
                            Id = new Guid("d26d575d-90eb-485c-b6a0-3bb7179a91d1"),
                            Caption = "Caption",
                            ImagePath = "https://placewaifu.com/image/91",
                            IsImageFeature = false,
                            ProductId = new Guid("d0d58f20-abe1-4f54-8e44-50e1d226ead4")
                        },
                        new
                        {
                            Id = new Guid("7d902e49-3858-4b12-8300-79fda12bcaf4"),
                            Caption = "Caption",
                            ImagePath = "https://placewaifu.com/image/92",
                            IsImageFeature = false,
                            ProductId = new Guid("d0d58f20-abe1-4f54-8e44-50e1d226ead4")
                        },
                        new
                        {
                            Id = new Guid("57b346d8-5da5-4fa1-b202-8bdeb4424a03"),
                            Caption = "Caption",
                            ImagePath = "https://placewaifu.com/image/93",
                            IsImageFeature = false,
                            ProductId = new Guid("d0d58f20-abe1-4f54-8e44-50e1d226ead4")
                        },
                        new
                        {
                            Id = new Guid("4b5b02eb-7856-4c6b-a4cc-1a777498b123"),
                            Caption = "Caption",
                            ImagePath = "https://placewaifu.com/image/87",
                            IsImageFeature = true,
                            ProductId = new Guid("dcbeea7e-4675-4a01-b59a-a9e1f3e5f4b4")
                        },
                        new
                        {
                            Id = new Guid("fc9e178f-d69a-4b8e-bda7-99f1e684e0be"),
                            Caption = "Caption",
                            ImagePath = "https://placewaifu.com/image/91",
                            IsImageFeature = false,
                            ProductId = new Guid("dcbeea7e-4675-4a01-b59a-a9e1f3e5f4b4")
                        },
                        new
                        {
                            Id = new Guid("f5e15f27-00d2-4326-b6dd-2cb662c620f3"),
                            Caption = "Caption",
                            ImagePath = "https://placewaifu.com/image/92",
                            IsImageFeature = false,
                            ProductId = new Guid("dcbeea7e-4675-4a01-b59a-a9e1f3e5f4b4")
                        },
                        new
                        {
                            Id = new Guid("fb5308e3-ec7c-4243-a0fd-f2766137ae2f"),
                            Caption = "Caption",
                            ImagePath = "https://placewaifu.com/image/93",
                            IsImageFeature = false,
                            ProductId = new Guid("dcbeea7e-4675-4a01-b59a-a9e1f3e5f4b4")
                        },
                        new
                        {
                            Id = new Guid("31b7bc68-a438-4171-9f96-6140dc90998e"),
                            Caption = "Caption",
                            ImagePath = "https://placewaifu.com/image/88",
                            IsImageFeature = true,
                            ProductId = new Guid("97aac145-947d-4da4-8191-a2a3faa81fce")
                        },
                        new
                        {
                            Id = new Guid("36bfe868-bc33-42c4-9a9c-2c97c22c2e98"),
                            Caption = "Caption",
                            ImagePath = "https://placewaifu.com/image/91",
                            IsImageFeature = false,
                            ProductId = new Guid("97aac145-947d-4da4-8191-a2a3faa81fce")
                        },
                        new
                        {
                            Id = new Guid("0d93bbf7-6e58-4eac-a827-bb77eea088df"),
                            Caption = "Caption",
                            ImagePath = "https://placewaifu.com/image/92",
                            IsImageFeature = false,
                            ProductId = new Guid("97aac145-947d-4da4-8191-a2a3faa81fce")
                        },
                        new
                        {
                            Id = new Guid("77d6ec4a-ff6c-4651-9aa8-8fe0dabf9dec"),
                            Caption = "Caption",
                            ImagePath = "https://placewaifu.com/image/93",
                            IsImageFeature = false,
                            ProductId = new Guid("97aac145-947d-4da4-8191-a2a3faa81fce")
                        },
                        new
                        {
                            Id = new Guid("1ee23024-f48c-4d4c-a27f-9a90eca9d136"),
                            Caption = "Caption",
                            ImagePath = "https://placewaifu.com/image/89",
                            IsImageFeature = true,
                            ProductId = new Guid("0a5b4248-5d36-45aa-89fc-dd913824d34e")
                        },
                        new
                        {
                            Id = new Guid("f710336b-e3ab-4046-a0f9-f9bda64a3735"),
                            Caption = "Caption",
                            ImagePath = "https://placewaifu.com/image/91",
                            IsImageFeature = false,
                            ProductId = new Guid("0a5b4248-5d36-45aa-89fc-dd913824d34e")
                        },
                        new
                        {
                            Id = new Guid("ef7f44e5-4994-4368-925a-58628e26c005"),
                            Caption = "Caption",
                            ImagePath = "https://placewaifu.com/image/92",
                            IsImageFeature = false,
                            ProductId = new Guid("0a5b4248-5d36-45aa-89fc-dd913824d34e")
                        },
                        new
                        {
                            Id = new Guid("424d2af5-a9b8-4c42-8680-d1e0c3e1a575"),
                            Caption = "Caption",
                            ImagePath = "https://placewaifu.com/image/93",
                            IsImageFeature = false,
                            ProductId = new Guid("0a5b4248-5d36-45aa-89fc-dd913824d34e")
                        },
                        new
                        {
                            Id = new Guid("3946bc3b-46ba-42b9-b2f8-f5486d137716"),
                            Caption = "Caption",
                            ImagePath = "https://placewaifu.com/image/90",
                            IsImageFeature = true,
                            ProductId = new Guid("da3156b8-3324-4684-8789-9af51316865b")
                        },
                        new
                        {
                            Id = new Guid("f2fc1ebe-a5e1-4bc0-b234-3d1cc8715e1b"),
                            Caption = "Caption",
                            ImagePath = "https://placewaifu.com/image/91",
                            IsImageFeature = false,
                            ProductId = new Guid("da3156b8-3324-4684-8789-9af51316865b")
                        },
                        new
                        {
                            Id = new Guid("5458d0ae-2789-4db8-bcef-770f2c582d95"),
                            Caption = "Caption",
                            ImagePath = "https://placewaifu.com/image/92",
                            IsImageFeature = false,
                            ProductId = new Guid("da3156b8-3324-4684-8789-9af51316865b")
                        },
                        new
                        {
                            Id = new Guid("477cc35b-5903-4c15-a3d2-8f3f31d0f1ec"),
                            Caption = "Caption",
                            ImagePath = "https://placewaifu.com/image/93",
                            IsImageFeature = false,
                            ProductId = new Guid("da3156b8-3324-4684-8789-9af51316865b")
                        },
                        new
                        {
                            Id = new Guid("127114cc-6332-4ff9-8194-9c640d10e1db"),
                            Caption = "Caption",
                            ImagePath = "https://placewaifu.com/image/91",
                            IsImageFeature = true,
                            ProductId = new Guid("19400bf1-1da8-4a52-a515-4c36577bc98b")
                        },
                        new
                        {
                            Id = new Guid("f5a606b1-7da1-427c-9665-2ab4360d4bb4"),
                            Caption = "Caption",
                            ImagePath = "https://placewaifu.com/image/91",
                            IsImageFeature = false,
                            ProductId = new Guid("19400bf1-1da8-4a52-a515-4c36577bc98b")
                        },
                        new
                        {
                            Id = new Guid("cf897f87-01c9-4ce2-908d-89082daadda6"),
                            Caption = "Caption",
                            ImagePath = "https://placewaifu.com/image/92",
                            IsImageFeature = false,
                            ProductId = new Guid("19400bf1-1da8-4a52-a515-4c36577bc98b")
                        },
                        new
                        {
                            Id = new Guid("84327376-5b8c-468e-a009-b7c2d4ff9a06"),
                            Caption = "Caption",
                            ImagePath = "https://placewaifu.com/image/93",
                            IsImageFeature = false,
                            ProductId = new Guid("19400bf1-1da8-4a52-a515-4c36577bc98b")
                        },
                        new
                        {
                            Id = new Guid("6e79aed1-3bd0-4232-ab12-af720fbac013"),
                            Caption = "Caption",
                            ImagePath = "https://placewaifu.com/image/92",
                            IsImageFeature = true,
                            ProductId = new Guid("5d01611b-e2ad-4abd-b40e-0450f50d2ec9")
                        },
                        new
                        {
                            Id = new Guid("7458a76d-8b2d-443f-8e7c-9240a341bbca"),
                            Caption = "Caption",
                            ImagePath = "https://placewaifu.com/image/91",
                            IsImageFeature = false,
                            ProductId = new Guid("5d01611b-e2ad-4abd-b40e-0450f50d2ec9")
                        },
                        new
                        {
                            Id = new Guid("3148ad2b-cc52-4b66-b4bd-1e937c73b9c4"),
                            Caption = "Caption",
                            ImagePath = "https://placewaifu.com/image/92",
                            IsImageFeature = false,
                            ProductId = new Guid("5d01611b-e2ad-4abd-b40e-0450f50d2ec9")
                        },
                        new
                        {
                            Id = new Guid("3ddf6fe4-6fe9-4013-83c4-9de112189e10"),
                            Caption = "Caption",
                            ImagePath = "https://placewaifu.com/image/93",
                            IsImageFeature = false,
                            ProductId = new Guid("5d01611b-e2ad-4abd-b40e-0450f50d2ec9")
                        },
                        new
                        {
                            Id = new Guid("bd7141a2-4a00-463e-9519-e0c8124a051f"),
                            Caption = "Caption",
                            ImagePath = "https://placewaifu.com/image/93",
                            IsImageFeature = true,
                            ProductId = new Guid("cff0eb9e-3b50-4ade-9f56-cb0e4ab4d617")
                        },
                        new
                        {
                            Id = new Guid("44c0aaa5-8a9f-44c2-9339-842720f7c507"),
                            Caption = "Caption",
                            ImagePath = "https://placewaifu.com/image/91",
                            IsImageFeature = false,
                            ProductId = new Guid("cff0eb9e-3b50-4ade-9f56-cb0e4ab4d617")
                        },
                        new
                        {
                            Id = new Guid("a962caf3-7b4c-47dd-bbb5-42fe669ac0af"),
                            Caption = "Caption",
                            ImagePath = "https://placewaifu.com/image/92",
                            IsImageFeature = false,
                            ProductId = new Guid("cff0eb9e-3b50-4ade-9f56-cb0e4ab4d617")
                        },
                        new
                        {
                            Id = new Guid("7fbdcd3a-9b73-419b-9a35-6dff09c4950e"),
                            Caption = "Caption",
                            ImagePath = "https://placewaifu.com/image/93",
                            IsImageFeature = false,
                            ProductId = new Guid("cff0eb9e-3b50-4ade-9f56-cb0e4ab4d617")
                        },
                        new
                        {
                            Id = new Guid("e05e7ebf-1891-453d-9771-76557af780b4"),
                            Caption = "Caption",
                            ImagePath = "https://placewaifu.com/image/94",
                            IsImageFeature = true,
                            ProductId = new Guid("9089f19c-473d-40b1-b7b3-e0f5f6c8f8df")
                        },
                        new
                        {
                            Id = new Guid("09084a61-12ed-49b1-aa39-e33015d8b544"),
                            Caption = "Caption",
                            ImagePath = "https://placewaifu.com/image/91",
                            IsImageFeature = false,
                            ProductId = new Guid("9089f19c-473d-40b1-b7b3-e0f5f6c8f8df")
                        },
                        new
                        {
                            Id = new Guid("4ec7b63d-242d-4359-b544-c9b83b421e56"),
                            Caption = "Caption",
                            ImagePath = "https://placewaifu.com/image/92",
                            IsImageFeature = false,
                            ProductId = new Guid("9089f19c-473d-40b1-b7b3-e0f5f6c8f8df")
                        },
                        new
                        {
                            Id = new Guid("723b90f8-d187-42f1-b3b8-402b1ccc5610"),
                            Caption = "Caption",
                            ImagePath = "https://placewaifu.com/image/93",
                            IsImageFeature = false,
                            ProductId = new Guid("9089f19c-473d-40b1-b7b3-e0f5f6c8f8df")
                        },
                        new
                        {
                            Id = new Guid("ed0b132c-aa81-42ba-9f00-04a89a02a076"),
                            Caption = "Caption",
                            ImagePath = "https://placewaifu.com/image/95",
                            IsImageFeature = true,
                            ProductId = new Guid("f9ac3e9c-da9e-4aba-8a12-291a3655864b")
                        },
                        new
                        {
                            Id = new Guid("2c93c143-3657-460a-8af0-c63077d4d4b4"),
                            Caption = "Caption",
                            ImagePath = "https://placewaifu.com/image/91",
                            IsImageFeature = false,
                            ProductId = new Guid("f9ac3e9c-da9e-4aba-8a12-291a3655864b")
                        },
                        new
                        {
                            Id = new Guid("5461b7bc-4484-4678-9277-0dababb5b5c1"),
                            Caption = "Caption",
                            ImagePath = "https://placewaifu.com/image/92",
                            IsImageFeature = false,
                            ProductId = new Guid("f9ac3e9c-da9e-4aba-8a12-291a3655864b")
                        },
                        new
                        {
                            Id = new Guid("30a59c82-f9c4-4717-ba0a-e38feecb35fc"),
                            Caption = "Caption",
                            ImagePath = "https://placewaifu.com/image/93",
                            IsImageFeature = false,
                            ProductId = new Guid("f9ac3e9c-da9e-4aba-8a12-291a3655864b")
                        },
                        new
                        {
                            Id = new Guid("09b46007-e91e-4935-be97-530f82143c3d"),
                            Caption = "Caption",
                            ImagePath = "https://placewaifu.com/image/96",
                            IsImageFeature = true,
                            ProductId = new Guid("6a9955a7-5c78-40fa-8020-174f1018f797")
                        },
                        new
                        {
                            Id = new Guid("2dec6b16-d280-47d7-be3e-45ca5ab56711"),
                            Caption = "Caption",
                            ImagePath = "https://placewaifu.com/image/91",
                            IsImageFeature = false,
                            ProductId = new Guid("6a9955a7-5c78-40fa-8020-174f1018f797")
                        },
                        new
                        {
                            Id = new Guid("ccae4843-4f33-4dfd-a928-0bf1009e5185"),
                            Caption = "Caption",
                            ImagePath = "https://placewaifu.com/image/92",
                            IsImageFeature = false,
                            ProductId = new Guid("6a9955a7-5c78-40fa-8020-174f1018f797")
                        },
                        new
                        {
                            Id = new Guid("97b9c89c-2ab2-4cf0-867c-f1d2f89a9da9"),
                            Caption = "Caption",
                            ImagePath = "https://placewaifu.com/image/93",
                            IsImageFeature = false,
                            ProductId = new Guid("6a9955a7-5c78-40fa-8020-174f1018f797")
                        },
                        new
                        {
                            Id = new Guid("fc27e1e9-63e8-4233-a1ac-b3839433ee62"),
                            Caption = "Caption",
                            ImagePath = "https://placewaifu.com/image/97",
                            IsImageFeature = true,
                            ProductId = new Guid("f35c176b-c70a-4fb5-b9b3-885eb8731901")
                        },
                        new
                        {
                            Id = new Guid("28ff4f76-994a-4af3-9fb1-70c38ca075fd"),
                            Caption = "Caption",
                            ImagePath = "https://placewaifu.com/image/91",
                            IsImageFeature = false,
                            ProductId = new Guid("f35c176b-c70a-4fb5-b9b3-885eb8731901")
                        },
                        new
                        {
                            Id = new Guid("e4a2c317-d328-416f-b2ed-cd21b557baf1"),
                            Caption = "Caption",
                            ImagePath = "https://placewaifu.com/image/92",
                            IsImageFeature = false,
                            ProductId = new Guid("f35c176b-c70a-4fb5-b9b3-885eb8731901")
                        },
                        new
                        {
                            Id = new Guid("9274a6ff-c84e-46a3-86bf-1ccf25b55990"),
                            Caption = "Caption",
                            ImagePath = "https://placewaifu.com/image/93",
                            IsImageFeature = false,
                            ProductId = new Guid("f35c176b-c70a-4fb5-b9b3-885eb8731901")
                        },
                        new
                        {
                            Id = new Guid("d7154a3d-eeb7-4e51-b954-25e2a09956a1"),
                            Caption = "Caption",
                            ImagePath = "https://placewaifu.com/image/97",
                            IsImageFeature = true,
                            ProductId = new Guid("e9416abf-ab8a-4b69-8bb5-3f3a8b7024ad")
                        },
                        new
                        {
                            Id = new Guid("a47c5a32-4726-468c-bf4d-953943b883c5"),
                            Caption = "Caption",
                            ImagePath = "https://placewaifu.com/image/91",
                            IsImageFeature = false,
                            ProductId = new Guid("e9416abf-ab8a-4b69-8bb5-3f3a8b7024ad")
                        },
                        new
                        {
                            Id = new Guid("6626b486-2c91-4ee2-9595-a91ff1753b86"),
                            Caption = "Caption",
                            ImagePath = "https://placewaifu.com/image/92",
                            IsImageFeature = false,
                            ProductId = new Guid("e9416abf-ab8a-4b69-8bb5-3f3a8b7024ad")
                        },
                        new
                        {
                            Id = new Guid("531f5f7d-f6e0-405b-99ae-10f8c7d724e4"),
                            Caption = "Caption",
                            ImagePath = "https://placewaifu.com/image/93",
                            IsImageFeature = false,
                            ProductId = new Guid("e9416abf-ab8a-4b69-8bb5-3f3a8b7024ad")
                        },
                        new
                        {
                            Id = new Guid("2066dfc9-3543-4471-8820-1d024afbb8fd"),
                            Caption = "Caption",
                            ImagePath = "https://placewaifu.com/image/97",
                            IsImageFeature = true,
                            ProductId = new Guid("9244f89d-1b5d-44cd-8a7f-1922d464e336")
                        },
                        new
                        {
                            Id = new Guid("34714690-11f5-4284-b061-bd8a268413ef"),
                            Caption = "Caption",
                            ImagePath = "https://placewaifu.com/image/91",
                            IsImageFeature = false,
                            ProductId = new Guid("9244f89d-1b5d-44cd-8a7f-1922d464e336")
                        },
                        new
                        {
                            Id = new Guid("eb53010b-b72d-4d89-ad11-92617b62472e"),
                            Caption = "Caption",
                            ImagePath = "https://placewaifu.com/image/92",
                            IsImageFeature = false,
                            ProductId = new Guid("9244f89d-1b5d-44cd-8a7f-1922d464e336")
                        },
                        new
                        {
                            Id = new Guid("28f952fa-5a43-41a3-879b-af279ec7d111"),
                            Caption = "Caption",
                            ImagePath = "https://placewaifu.com/image/93",
                            IsImageFeature = false,
                            ProductId = new Guid("9244f89d-1b5d-44cd-8a7f-1922d464e336")
                        });
                });

            modelBuilder.Entity("StorageSystem.Domain.Entities.ProductSupplier", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,4)");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SupplierId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("SupplierId");

                    b.ToTable("ProductSuppliers");
                });

            modelBuilder.Entity("StorageSystem.Domain.Entities.ProductUnit", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<Guid>("UnitId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("UnitId");

                    b.ToTable("ProductUnits");

                    b.HasData(
                        new
                        {
                            Id = new Guid("418692b1-7e02-4c3b-8fc5-f3559c196e16"),
                            ProductId = new Guid("5d01611b-e2ad-4abd-b40e-0450f50d2ec9"),
                            Quantity = 100,
                            UnitId = new Guid("4b703409-a32a-49cf-9943-d5a68dbedd6f")
                        },
                        new
                        {
                            Id = new Guid("f3261f56-4e36-4e1a-866b-591fe403159e"),
                            ProductId = new Guid("5d01611b-e2ad-4abd-b40e-0450f50d2ec9"),
                            Quantity = 100,
                            UnitId = new Guid("54cb56aa-a710-47e0-a386-4cc493d46747")
                        },
                        new
                        {
                            Id = new Guid("d8d9e88c-7f75-4d5e-9716-36f8c4461608"),
                            ProductId = new Guid("c861791b-bce9-47a9-84c7-1abdb578d88b"),
                            Quantity = 100,
                            UnitId = new Guid("bb7b0969-4383-446f-8ab9-6d766df08359")
                        });
                });

            modelBuilder.Entity("StorageSystem.Domain.Entities.Supplier", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("DateCreated")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Suppliers");
                });

            modelBuilder.Entity("StorageSystem.Domain.Entities.Unit", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("DateCreated")
                        .HasColumnType("datetimeoffset");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Units");

                    b.HasData(
                        new
                        {
                            Id = new Guid("4b703409-a32a-49cf-9943-d5a68dbedd6f"),
                            DateCreated = new DateTimeOffset(new DateTime(2024, 1, 30, 19, 15, 29, 323, DateTimeKind.Unspecified).AddTicks(2789), new TimeSpan(0, 7, 0, 0, 0)),
                            IsDeleted = false,
                            Name = "Thùng"
                        },
                        new
                        {
                            Id = new Guid("bb7b0969-4383-446f-8ab9-6d766df08359"),
                            DateCreated = new DateTimeOffset(new DateTime(2024, 1, 30, 19, 15, 29, 323, DateTimeKind.Unspecified).AddTicks(2804), new TimeSpan(0, 7, 0, 0, 0)),
                            IsDeleted = false,
                            Name = "Kg"
                        },
                        new
                        {
                            Id = new Guid("54cb56aa-a710-47e0-a386-4cc493d46747"),
                            DateCreated = new DateTimeOffset(new DateTime(2024, 1, 30, 19, 15, 29, 323, DateTimeKind.Unspecified).AddTicks(2814), new TimeSpan(0, 7, 0, 0, 0)),
                            IsDeleted = false,
                            Name = "Hộp"
                        });
                });

            modelBuilder.Entity("StorageSystem.Persistence.Models.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("RefreshToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("RefreshTokenExpiryTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("Users", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("StorageSystem.Persistence.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("StorageSystem.Persistence.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StorageSystem.Persistence.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("StorageSystem.Persistence.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("StorageSystem.Domain.Entities.Bill", b =>
                {
                    b.HasOne("StorageSystem.Domain.Entities.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("StorageSystem.Domain.Entities.BillDetail", b =>
                {
                    b.HasOne("StorageSystem.Domain.Entities.Bill", "Bill")
                        .WithMany("BillDetails")
                        .HasForeignKey("BillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StorageSystem.Domain.Entities.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bill");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("StorageSystem.Domain.Entities.Coupon", b =>
                {
                    b.HasOne("StorageSystem.Domain.Entities.Supplier", "Supplier")
                        .WithMany()
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("StorageSystem.Domain.Entities.CouponDetail", b =>
                {
                    b.HasOne("StorageSystem.Domain.Entities.Coupon", "Coupon")
                        .WithMany("CouponDetails")
                        .HasForeignKey("CouponId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StorageSystem.Domain.Entities.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Coupon");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("StorageSystem.Domain.Entities.Order", b =>
                {
                    b.HasOne("StorageSystem.Domain.Entities.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId1");

                    b.HasOne("StorageSystem.Domain.Entities.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StorageSystem.Domain.Entities.Unit", "Unit")
                        .WithMany()
                        .HasForeignKey("UnitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Product");

                    b.Navigation("Unit");
                });

            modelBuilder.Entity("StorageSystem.Domain.Entities.Product", b =>
                {
                    b.HasOne("StorageSystem.Domain.Entities.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("StorageSystem.Domain.Entities.ProductImage", b =>
                {
                    b.HasOne("StorageSystem.Domain.Entities.Product", "Product")
                        .WithMany("ProductImages")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("StorageSystem.Domain.Entities.ProductSupplier", b =>
                {
                    b.HasOne("StorageSystem.Domain.Entities.Product", "Product")
                        .WithMany("ProductSuppliers")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StorageSystem.Domain.Entities.Supplier", "Supplier")
                        .WithMany("ProductSuppliers")
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("StorageSystem.Domain.Entities.ProductUnit", b =>
                {
                    b.HasOne("StorageSystem.Domain.Entities.Product", "Product")
                        .WithMany("ProductUnits")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StorageSystem.Domain.Entities.Unit", "Unit")
                        .WithMany("ProductUnits")
                        .HasForeignKey("UnitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("Unit");
                });

            modelBuilder.Entity("StorageSystem.Domain.Entities.Bill", b =>
                {
                    b.Navigation("BillDetails");
                });

            modelBuilder.Entity("StorageSystem.Domain.Entities.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("StorageSystem.Domain.Entities.Coupon", b =>
                {
                    b.Navigation("CouponDetails");
                });

            modelBuilder.Entity("StorageSystem.Domain.Entities.Product", b =>
                {
                    b.Navigation("ProductImages");

                    b.Navigation("ProductSuppliers");

                    b.Navigation("ProductUnits");
                });

            modelBuilder.Entity("StorageSystem.Domain.Entities.Supplier", b =>
                {
                    b.Navigation("ProductSuppliers");
                });

            modelBuilder.Entity("StorageSystem.Domain.Entities.Unit", b =>
                {
                    b.Navigation("ProductUnits");
                });
#pragma warning restore 612, 618
        }
    }
}
